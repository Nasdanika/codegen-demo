<?xml version="1.0" encoding="UTF-8"?>
<org.nasdanika.codegen:ResourceGroup xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:org.nasdanika.codegen="urn:org.nasdanika.codegen" xmlns:org.nasdanika.codegen.java="urn:org.nasdanika.codegen.java" title="HTML Spring Boot Application" description="Spring boot application which uses [Nasdanika HTML](https://www.nasdanika.org/home/products/html/index.html) for generating pages.">
  <elements xsi:type="org.nasdanika.codegen:TextFile" name="pom.xml">
    <generators xsi:type="org.nasdanika.codegen:TextContentReference" title="Template" ref="../templates/pom.xml" interpolate="true"/>
  </elements>
  <elements xsi:type="org.nasdanika.codegen:Container" name="main">
    <children xsi:type="org.nasdanika.codegen.java:SourceFolder" name="java">
      <children xsi:type="org.nasdanika.codegen.java:Package" name="org.nasdanika.html.springbootdemo">
        <children xsi:type="org.nasdanika.codegen.java:CompilationUnit" name="HomeController">
          <generators xsi:type="org.nasdanika.codegen:StaticText" contents="package ${package-name};&#xD;&#xA;&#xD;&#xA;import java.net.URL;&#xD;&#xA;&#xD;&#xA;import org.json.JSONObject;&#xD;&#xA;import org.json.JSONTokener;&#xD;&#xA;import org.nasdanika.common.PrintStreamProgressMonitor;&#xD;&#xA;import org.nasdanika.common.ProgressMonitor;&#xD;&#xA;import org.nasdanika.html.Select;&#xD;&#xA;import org.nasdanika.html.Tag;&#xD;&#xA;import org.nasdanika.html.app.Action;&#xD;&#xA;import org.nasdanika.html.app.Application;&#xD;&#xA;import org.nasdanika.html.app.ApplicationBuilder;&#xD;&#xA;import org.nasdanika.html.app.ViewGenerator;&#xD;&#xA;import org.nasdanika.html.app.impl.ActionApplicationBuilder;&#xD;&#xA;import org.nasdanika.html.app.impl.BootstrapContainerApplication;&#xD;&#xA;import org.nasdanika.html.app.impl.ContentAction;&#xD;&#xA;import org.nasdanika.html.bootstrap.BootstrapFactory;&#xD;&#xA;import org.nasdanika.html.bootstrap.Color;&#xD;&#xA;import org.nasdanika.html.bootstrap.Container;&#xD;&#xA;import org.nasdanika.html.bootstrap.InputGroup;&#xD;&#xA;import org.nasdanika.html.bootstrap.Placement;&#xD;&#xA;import org.nasdanika.html.bootstrap.Theme;&#xD;&#xA;import org.nasdanika.html.fontawesome.FontAwesomeFactory;&#xD;&#xA;import org.nasdanika.html.jstree.JsTreeFactory;&#xD;&#xA;import org.nasdanika.html.knockout.KnockoutFactory;&#xD;&#xA;import org.springframework.web.bind.annotation.RequestMapping;&#xD;&#xA;import org.springframework.web.bind.annotation.RestController;&#xD;&#xA;&#xD;&#xA;@RestController&#xD;&#xA;public class HomeController {&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;@RequestMapping(&quot;/&quot;)&#xD;&#xA;&#x9;public String home() throws Exception {&#xD;&#xA;&#x9;&#x9;Application app = new BootstrapContainerApplication(Theme.Litera, false) {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;container.border(Color.DANGER);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;header.border(Color.DANGER).background(Color.PRIMARY);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;navigationBar.border(Color.DANGER);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;navigationPanel.border(Color.DANGER).widthAuto();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;footer.border(Color.DANGER);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;contentPanel.border(Color.DANGER);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;};&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;app.header(&quot;Header&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;.navigationBar(&quot;Navigation bar&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;.navigationPanel(&quot;Navigation panel&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;.contentPanel(&quot;Content&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;.footer(&quot;Footer&quot;);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;return app.toString();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;@RequestMapping(&quot;/action.html&quot;)&#xD;&#xA;&#x9;public String actionApp() throws Exception {&#xD;&#xA;&#x9;&#x9;JSONObject json = new JSONObject(new JSONTokener(new URL(&quot;https://www.nasdanika.org/products/html/2.0.0-SNAPSHOT/test-dumps/app/action/action.json&quot;).openStream()));&#xD;&#xA;&#x9;&#x9;ContentAction contentAction = new ContentAction(json.toMap());&#xD;&#xA;&#x9;&#x9;Application app = new BootstrapContainerApplication(Theme.Default, true) {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;header.background(Color.PRIMARY);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;navigationBar.background(Color.LIGHT).text().color(Color.DARK);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;footer.background(Color.SECONDARY);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;navigationPanel.widthAuto().border(Color.DEFAULT, Placement.RIGHT);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;contentRow.toHTMLElement().style(&quot;min-height&quot;, &quot;500px&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;container.border(Color.DEFAULT).margin().top(1);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// Theme select at the bottom for experimentation.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;BootstrapFactory factory = BootstrapFactory.INSTANCE;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Select select = factory.themeSelect(Theme.Default);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;InputGroup selectInputGroup = factory.inputGroup();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;selectInputGroup.prepend(&quot;Select Bootstrap theme&quot;);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;selectInputGroup.input(select);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Container themeSelectorContainer = factory.container();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;themeSelectorContainer.row().col(selectInputGroup).margin().top(2);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;getHTMLPage().body(themeSelectorContainer);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;FontAwesomeFactory.INSTANCE.cdn(getHTMLPage());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;JsTreeFactory.INSTANCE.cdn(getHTMLPage());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;KnockoutFactory.INSTANCE.cdn(getHTMLPage());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;};&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Action activeAction = contentAction.getChildren().get(0).getChildren().get(0);&#xD;&#xA;&#x9;&#x9;ApplicationBuilder appBuilder = new ActionApplicationBuilder(activeAction) {&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;protected Object generateHeader(ViewGenerator viewGenerator, ProgressMonitor progressMonitor) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return ((Tag) super.generateHeader(viewGenerator, progressMonitor)).addClass(&quot;text-dark&quot;).style().text().decoration().none();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;};&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;ProgressMonitor progressMonitor = new PrintStreamProgressMonitor();&#xD;&#xA;&#x9;&#x9;appBuilder.build(app, progressMonitor);&#xD;&#xA;&#x9;&#x9;return app.toString();&#xD;&#xA;&#x9;}&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;" interpolate="true"/>
        </children>
      </children>
    </children>
  </elements>
</org.nasdanika.codegen:ResourceGroup>
